import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

class PrivacyPolicyScreen extends StatelessWidget {
  const PrivacyPolicyScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Ch√≠nh S√°ch B·∫£o M·∫≠t'),
        backgroundColor: Theme.of(context).primaryColor,
        foregroundColor: Colors.white,
        elevation: 0,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Header
            _buildHeader(context),
            
            const SizedBox(height: 24),
            
            // Privacy Policy Content
            _buildPrivacyPolicyContent(context),
            
            const SizedBox(height: 24),
            
            // Terms of Service
            _buildTermsOfService(context),
            
            const SizedBox(height: 24),
            
            // Contact Information
            _buildContactInfo(context),
            
            const SizedBox(height: 32),
            
            // Last Updated
            _buildLastUpdated(context),
          ],
        ),
      ),
    );
  }

  Widget _buildHeader(BuildContext context) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          colors: [
            Theme.of(context).primaryColor,
            Theme.of(context).primaryColor.withOpacity(0.8),
          ],
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
        ),
        borderRadius: BorderRadius.circular(16),
      ),
      child: const Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'üõ°Ô∏è Cam K·∫øt B·∫£o M·∫≠t',
            style: TextStyle(
              fontSize: 22,
              fontWeight: FontWeight.bold,
              color: Colors.white,
            ),
          ),
          SizedBox(height: 8),
          Text(
            'Ch√∫ng t√¥i cam k·∫øt b·∫£o v·ªá quy·ªÅn ri√™ng t∆∞ v√† th√¥ng tin c√° nh√¢n c·ªßa b·∫°n',
            style: TextStyle(
              fontSize: 14,
              color: Colors.white70,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildPrivacyPolicyContent(BuildContext context) {
    return Card(
      elevation: 2,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text(
              'üìã Ch√≠nh S√°ch B·∫£o M·∫≠t',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            
            const SizedBox(height: 16),
            
            _buildPolicySection(
              '1. Th√¥ng Tin Ch√∫ng T√¥i Thu Th·∫≠p',
              [
                '‚Ä¢ Th√¥ng tin t√†i kho·∫£n Google (t√™n, email, avatar) khi ƒëƒÉng nh·∫≠p',
                '‚Ä¢ D·ªØ li·ªáu h·ªçc t·∫≠p (t·ª´ ƒë√£ h·ªçc, ƒëi·ªÉm quiz, streak, progress)',
                '‚Ä¢ C√†i ƒë·∫∑t ·ª©ng d·ª•ng (th√¥ng b√°o, m·ª•c ti√™u h√†ng ng√†y)',
                '‚Ä¢ Th√¥ng tin thi·∫øt b·ªã c∆° b·∫£n (model, OS version) ƒë·ªÉ t·ªëi ∆∞u hi·ªáu su·∫•t',
              ],
            ),
            
            _buildPolicySection(
              '2. C√°ch Ch√∫ng T√¥i S·ª≠ D·ª•ng Th√¥ng Tin',
              [
                '‚Ä¢ Cung c·∫•p tr·∫£i nghi·ªám h·ªçc t·∫≠p c√° nh√¢n h√≥a',
                '‚Ä¢ Theo d√µi ti·∫øn tr√¨nh v√† t·∫°o b√°o c√°o h·ªçc t·∫≠p',
                '‚Ä¢ G·ª≠i th√¥ng b√°o nh·∫Øc nh·ªü ph√π h·ª£p',
                '‚Ä¢ C·∫£i thi·ªán t√≠nh nƒÉng v√† hi·ªáu su·∫•t ·ª©ng d·ª•ng',
                '‚Ä¢ H·ªó tr·ª£ k·ªπ thu·∫≠t khi c√≥ y√™u c·∫ßu',
              ],
            ),
            
            _buildPolicySection(
              '3. L∆∞u Tr·ªØ v√† B·∫£o M·∫≠t D·ªØ Li·ªáu',
              [
                '‚Ä¢ D·ªØ li·ªáu ƒë∆∞·ª£c l∆∞u c·ª•c b·ªô tr√™n thi·∫øt b·ªã c·ªßa b·∫°n',
                '‚Ä¢ Kh√¥ng chia s·∫ª th√¥ng tin c√° nh√¢n v·ªõi b√™n th·ª© ba',
                '‚Ä¢ S·ª≠ d·ª•ng m√£ h√≥a ƒë·ªÉ b·∫£o v·ªá d·ªØ li·ªáu nh·∫°y c·∫£m',
                '‚Ä¢ Tu√¢n th·ªß c√°c ti√™u chu·∫©n b·∫£o m·∫≠t qu·ªëc t·∫ø',
                '‚Ä¢ Backup ƒë·ªãnh k·ª≥ ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n d·ªØ li·ªáu',
              ],
            ),
            
            _buildPolicySection(
              '4. Quy·ªÅn C·ªßa Ng∆∞·ªùi D√πng',
              [
                '‚Ä¢ Truy c·∫≠p v√† xem th√¥ng tin c√° nh√¢n ƒë√£ l∆∞u',
                '‚Ä¢ Ch·ªânh s·ª≠a ho·∫∑c c·∫≠p nh·∫≠t th√¥ng tin',
                '‚Ä¢ X√≥a t√†i kho·∫£n v√† to√†n b·ªô d·ªØ li·ªáu',
                '‚Ä¢ T·∫Øt/b·∫≠t th√¥ng b√°o v√† t√≠nh nƒÉng theo √Ω mu·ªën',
                '‚Ä¢ Xu·∫•t d·ªØ li·ªáu h·ªçc t·∫≠p (t√≠nh nƒÉng s·∫Øp c√≥)',
              ],
            ),
            
            _buildPolicySection(
              '5. Cookies v√† Tracking',
              [
                '‚Ä¢ Kh√¥ng s·ª≠ d·ª•ng cookies ho·∫∑c tracking tools',
                '‚Ä¢ Kh√¥ng thu th·∫≠p d·ªØ li·ªáu duy·ªát web',
                '‚Ä¢ Ch·ªâ s·ª≠ d·ª•ng analytics c∆° b·∫£n ƒë·ªÉ c·∫£i thi·ªán app',
                '‚Ä¢ Ho√†n to√†n offline sau khi ƒëƒÉng nh·∫≠p',
              ],
            ),
            
            _buildPolicySection(
              '6. Chia S·∫ª Th√¥ng Tin',
              [
                '‚Ä¢ KH√îNG b√°n th√¥ng tin c√° nh√¢n',
                '‚Ä¢ KH√îNG chia s·∫ª v·ªõi b√™n th·ª© ba v√¨ m·ª•c ƒë√≠ch th∆∞∆°ng m·∫°i',
                '‚Ä¢ Ch·ªâ chia s·∫ª khi c√≥ y√™u c·∫ßu ph√°p l√Ω',
                '‚Ä¢ Th√¥ng b√°o tr∆∞·ªõc khi c√≥ thay ƒë·ªïi ch√≠nh s√°ch',
              ],
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildTermsOfService(BuildContext context) {
    return Card(
      elevation: 2,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text(
              'üìú ƒêi·ªÅu Kho·∫£n S·ª≠ D·ª•ng',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            
            const SizedBox(height: 16),
            
            _buildPolicySection(
              '1. Ch·∫•p Nh·∫≠n ƒêi·ªÅu Kho·∫£n',
              [
                '‚Ä¢ B·∫±ng vi·ªác s·ª≠ d·ª•ng app, b·∫°n ƒë·ªìng √Ω v·ªõi c√°c ƒëi·ªÅu kho·∫£n',
                '‚Ä¢ C·∫≠p nh·∫≠t ƒëi·ªÅu kho·∫£n s·∫Ω ƒë∆∞·ª£c th√¥ng b√°o qua app',
                '‚Ä¢ Ti·∫øp t·ª•c s·ª≠ d·ª•ng = ch·∫•p nh·∫≠n ƒëi·ªÅu kho·∫£n m·ªõi',
              ],
            ),
            
            _buildPolicySection(
              '2. S·ª≠ D·ª•ng H·ª£p L·ªá',
              [
                '‚Ä¢ S·ª≠ d·ª•ng app cho m·ª•c ƒë√≠ch h·ªçc t·∫≠p c√° nh√¢n',
                '‚Ä¢ Kh√¥ng hack, reverse engineer, ho·∫∑c ph√° ho·∫°i',
                '‚Ä¢ Kh√¥ng spam ho·∫∑c l·∫°m d·ª•ng t√≠nh nƒÉng',
                '‚Ä¢ Tu√¢n th·ªß ph√°p lu·∫≠t ƒë·ªãa ph∆∞∆°ng',
              ],
            ),
            
            _buildPolicySection(
              '3. N·ªôi Dung v√† B·∫£n Quy·ªÅn',
              [
                '‚Ä¢ T·ª´ v·ª±ng v√† b√†i h·ªçc thu·ªôc b·∫£n quy·ªÅn ƒê√¥ng S∆°n Software',
                '‚Ä¢ Cho ph√©p s·ª≠ d·ª•ng c√° nh√¢n, kh√¥ng th∆∞∆°ng m·∫°i',
                '‚Ä¢ Kh√¥ng sao ch√©p, ph√¢n ph·ªëi l·∫°i n·ªôi dung',
                '‚Ä¢ B√°o c√°o vi ph·∫°m b·∫£n quy·ªÅn qua email h·ªó tr·ª£',
              ],
            ),
            
            _buildPolicySection(
              '4. Gi·ªõi H·∫°n Tr√°ch Nhi·ªám',
              [
                '‚Ä¢ App cung c·∫•p "nh∆∞ hi·ªán t·∫°i", kh√¥ng b·∫£o ƒë·∫£m 100% ho√†n h·∫£o',
                '‚Ä¢ Kh√¥ng ch·ªãu tr√°ch nhi·ªám v·ªÅ gi√°n ƒëo·∫°n d·ªãch v·ª•',
                '‚Ä¢ Ng∆∞·ªùi d√πng t·ª± ch·ªãu tr√°ch nhi·ªám v·ªÅ vi·ªác s·ª≠ d·ª•ng',
                '‚Ä¢ Kh√¥ng b·∫£o ƒë·∫£m k·∫øt qu·∫£ h·ªçc t·∫≠p c·ª• th·ªÉ',
              ],
            ),
            
            _buildPolicySection(
              '5. Thay ƒê·ªïi v√† Ch·∫•m D·ª©t',
              [
                '‚Ä¢ C√≥ quy·ªÅn c·∫≠p nh·∫≠t app v√† t√≠nh nƒÉng',
                '‚Ä¢ C√≥ th·ªÉ ng·ª´ng cung c·∫•p d·ªãch v·ª• v·ªõi th√¥ng b√°o tr∆∞·ªõc',
                '‚Ä¢ Ng∆∞·ªùi d√πng c√≥ th·ªÉ d·ª´ng s·ª≠ d·ª•ng b·∫•t c·ª© l√∫c n√†o',
                '‚Ä¢ D·ªØ li·ªáu s·∫Ω ƒë∆∞·ª£c x√≥a khi ng·ª´ng s·ª≠ d·ª•ng',
              ],
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildContactInfo(BuildContext context) {
    return Card(
      elevation: 2,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text(
              'üìû Li√™n H·ªá v√† Khi·∫øu N·∫°i',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            
            const SizedBox(height: 16),
            
            Container(
              padding: const EdgeInsets.all(12),
              decoration: BoxDecoration(
                color: Colors.blue[50],
                borderRadius: BorderRadius.circular(8),
                border: Border.all(color: Colors.blue[200]!),
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  const Text(
                    'N·∫øu b·∫°n c√≥ th·∫Øc m·∫Øc v·ªÅ ch√≠nh s√°ch b·∫£o m·∫≠t ho·∫∑c mu·ªën khi·∫øu n·∫°i:',
                    style: TextStyle(fontSize: 14, fontWeight: FontWeight.w500),
                  ),
                  const SizedBox(height: 12),
                  Row(
                    children: [
                      const Icon(Icons.email, color: Colors.blue, size: 20),
                      const SizedBox(width: 8),
                      Expanded(
                        child: Text(
                          'hungbuit@gmail.com',
                          style: TextStyle(
                            fontSize: 16,
                            color: Colors.blue[700],
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                      ),
                      IconButton(
                        onPressed: () => _copyToClipboard(context, 'hungbuit@gmail.com'),
                        icon: const Icon(Icons.copy, size: 18),
                        tooltip: 'Sao ch√©p email',
                      ),
                    ],
                  ),
                  const SizedBox(height: 8),
                  const Text(
                    '‚úÖ Ph·∫£n h·ªìi trong 24-48 gi·ªù\n'
                    '‚úÖ H·ªó tr·ª£ ti·∫øng Vi·ªát v√† English\n'
                    '‚úÖ Gi·∫£i quy·∫øt khi·∫øu n·∫°i mi·ªÖn ph√≠',
                    style: TextStyle(fontSize: 12, color: Colors.grey),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildLastUpdated(BuildContext context) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey[100],
        borderRadius: BorderRadius.circular(8),
        border: Border.all(color: Colors.grey[300]!),
      ),
      child: Column(
        children: [
          const Text(
            'üìÖ C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: 22 th√°ng 9, 2025',
            style: TextStyle(
              fontSize: 14,
              fontWeight: FontWeight.w500,
              color: Colors.black87,
            ),
          ),
          const SizedBox(height: 4),
          Text(
            'Phi√™n b·∫£n ch√≠nh s√°ch: 1.0.0',
            style: TextStyle(
              fontSize: 12,
              color: Colors.grey[600],
            ),
          ),
          const SizedBox(height: 12),
          const Text(
            'üí° Ch√≠nh s√°ch c√≥ th·ªÉ ƒë∆∞·ª£c c·∫≠p nh·∫≠t ƒë·ªÉ tu√¢n th·ªß lu·∫≠t ph√°p v√† c·∫£i thi·ªán d·ªãch v·ª•. '
            'Thay ƒë·ªïi quan tr·ªçng s·∫Ω ƒë∆∞·ª£c th√¥ng b√°o qua email ho·∫∑c trong app.',
            style: TextStyle(
              fontSize: 12,
              color: Colors.black54,
              fontStyle: FontStyle.italic,
            ),
            textAlign: TextAlign.center,
          ),
        ],
      ),
    );
  }

  Widget _buildPolicySection(String title, List<String> points) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: const TextStyle(
              fontSize: 16,
              fontWeight: FontWeight.w600,
              color: Colors.black87,
            ),
          ),
          const SizedBox(height: 8),
          ...points.map((point) => Padding(
            padding: const EdgeInsets.only(bottom: 4),
            child: Text(
              point,
              style: TextStyle(
                fontSize: 14,
                color: Colors.grey[700],
                height: 1.4,
              ),
            ),
          )).toList(),
        ],
      ),
    );
  }

  void _copyToClipboard(BuildContext context, String text) {
    Clipboard.setData(ClipboardData(text: text));
    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(
        content: Text('üìã ƒê√£ sao ch√©p email v√†o clipboard'),
        duration: Duration(seconds: 2),
      ),
    );
  }
}
